d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   1) import React from 'react';
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   2) import { StyleSheet, Text, View, ScrollView } from 'react-native';
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   3) 
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   4) const styles = StyleSheet.create({
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   5)     container: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   6)         flex: 1,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   7)         backgroundColor: '#f0f0f0',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   8)         padding: 20,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400   9)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  10)     title: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  11)         fontSize: 30,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  12)         fontWeight: 'bold',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  13)         color: '#333',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  14)         marginBottom: 20,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  15)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  16)     date: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  17)         fontSize: 18,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  18)         color: '#666',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  19)         marginBottom: 20,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  20)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  21)     sectionTitle: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  22)         fontSize: 25,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  23)         fontWeight: 'bold',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  24)         color: '#444',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  25)         marginBottom: 10,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  26)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  27)     list: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  28)         marginBottom: 20,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  29)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  30)     listItem: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  31)         fontSize: 18,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  32)         color: '#555',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  33)         marginBottom: 5,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  34)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  35)     outcome: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  36)         fontSize: 18,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  37)         color: '#555',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  38)         marginBottom: 20,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  39)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  40)     table: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  41)         borderWidth: 1,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  42)         borderColor: '#ccc',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  43)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  44)     tableRow: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  45)         flexDirection: 'row',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  46)         borderBottomWidth: 1,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  47)         borderBottomColor: '#ccc',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  48)         padding: 10,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  49)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  50)     tableHeader: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  51)         fontWeight: 'bold',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  52)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  53)     tableCell: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  54)         flex: 1,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  55)         justifyContent: 'center',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  56)         alignItems: 'center',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  57)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  58)     tableText: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  59)         fontSize: 18,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  60)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  61)     header: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  62)         flexDirection: 'row',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  63)         alignItems: 'center',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  64)         marginBottom: 20,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  65)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  66)     title: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  67)         fontSize: 30,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  68)         fontWeight: 'bold',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  69)         color: '#333',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  70)         flex: 1,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  71)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  72)     date: {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  73)         fontSize: 18,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  74)         color: '#666',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  75)         marginLeft: 10,
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  76)     },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  77) });
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  78) 
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  79) export default class RaceScreen extends React.Component {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  80)     constructor(props) {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  81)         super(props);
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  82)         this.state = {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  83)             raceTitle: 'Grand Prix',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  84)             raceDate: '10/8/2021',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  85)             drivers: [
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  86)                 { name: 'Max Verstappen', score: '1' },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  87)                 { name: 'Lewis Hamilton', score: '2' },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  88)                 { name: 'Valtteri Bottas', score: '3' },
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  89)             ],
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  90)             outcome: 'X team won!',
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  91)             additionalInfo: 'This race was part of the a world championship series.'
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  92)         };
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  93)     }
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  94) 
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  95)     render() {
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  96)         const { raceTitle, raceDate, drivers, outcome, additionalInfo } = this.state;
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  97) 
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  98)         return (
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400  99)             <ScrollView style={styles.container}>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 100)                 <View style={styles.header}>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 101)                     <Text style={styles.title}>{raceTitle}</Text>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 102)                     <Text style={styles.date}>{raceDate}</Text>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 103)                 </View>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 104) 
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 105)                 <Text style={styles.sectionTitle}>Results</Text>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 106)                 <View style={styles.table}>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 107)                     <View style={styles.tableRow}>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 108)                         <View style={styles.tableCell}><Text style={[styles.tableText, styles.tableHeader]}>Driver</Text></View>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 109)                         <View style={styles.tableCell}><Text style={[styles.tableText, styles.tableHeader]}>Score</Text></View>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 110)                     </View>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 111)                     {drivers.map((driver, index) => (
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 112)                         <View key={index} style={styles.tableRow}>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 113)                             <View style={styles.tableCell}><Text style={styles.tableText}>{driver.name}</Text></View>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 114)                             <View style={styles.tableCell}><Text style={styles.tableText}>{driver.score}</Text></View>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 115)                         </View>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 116)                     ))}
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 117)                 </View>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 118) 
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 119)                 {additionalInfo && (
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 120)                     <>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 121)                         <Text style={styles.sectionTitle}>Additional Information</Text>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 122)                         <Text style={styles.outcome}>{additionalInfo}</Text>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 123)                     </>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 124)                 )}
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 125)             </ScrollView>
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 126)         );
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 127)     }
d5628cf9 (nryanl 2023-10-25 15:44:44 -0400 128) }
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400   9) import RaceScreen from '../screens/racescreen';
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400  80)             <Stack.Screen
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400  81) 				name='RaceScreen'
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400  82) 				component={RaceScreen}
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400  83) 				options={{
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400  84) 					title: 'RaceScreen',
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400  85) 				}}
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400  86) 			>
d5628cf9 (nryanl           2023-10-25 15:44:44 -0400  87) 			</Stack.Screen>
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 21)         }
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 22)         
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 23) class DriversSerializer(serializers.ModelSerializer):
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 24)     class Meta:
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 25)         model = Drivers
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 26)         fields = '__all__'
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 22)     path('races/<int:pk>/', views.Race.as_view()),
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 23)     path('drivers/', views.Drivers.as_view()),
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 291) 
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 292) class DriversView(APIView):
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 293)     def get(self, request, format=None):
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 294)         try:
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 295)             drivers = Drivers.objects.all()
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 296)             serializer = DriversSerializer(drivers, many=True)
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 297)             return Response(serializer.data, status=status.HTTP_200_OK)
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 298)         except:
2aca3b2a (nryanl          2023-10-25 16:12:09 -0400 299)             return Response(status=status.HTTP_404_NOT_FOUND)
